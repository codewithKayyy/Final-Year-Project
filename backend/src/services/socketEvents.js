// backend/src/services/socketEvents.js
const {
    registerAgent,
    unregisterAgent,
    handleTelemetry,
    handleAttackOutcome
} = require("./agentService");
const {
    notifySimulationUpdate,
    notifyAgentStatus
} = require("./simulationService");

/**
 * Attach all event handlers for new socket connections.
 */
function attachSocketEvents(io) {
    io.on("connection", (socket) => {
        console.log(`üîå Client connected: ${socket.id}`);

        // ‚îÄ‚îÄ‚îÄ 1. Agent Registration ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        socket.on("registerAgent", (agentId) => {
            registerAgent(socket, agentId);
            notifyAgentStatus(agentId, "online"); // üîî Notify dashboards
        });

        // ‚îÄ‚îÄ‚îÄ 2. Telemetry Data ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        socket.on("telemetry", async (data) => {
            await handleTelemetry(socket, data);
            if (data.agentId) {
                io.emit("agentTelemetryUpdate", { agentId: data.agentId, ...data });
            }
        });

        // ‚îÄ‚îÄ‚îÄ 3. Attack Outcome ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        socket.on("attackOutcome", async (data) => {
            await handleAttackOutcome(socket, data);
            notifySimulationUpdate(data.simulationId, {
                status: data.outcome,
                agentId: data.agentId,
                details: data.details
            });
        });

        // ‚îÄ‚îÄ‚îÄ 4. Disconnect ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        socket.on("disconnect", () => {
            unregisterAgent(socket.id);
            const agentId = socket.handshake.query?.agentId;
            if (agentId) notifyAgentStatus(agentId, "offline");
        });

        // ‚îÄ‚îÄ‚îÄ 5. Error Handler ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        socket.on("error", (err) => {
            console.error(`‚ö†Ô∏è Socket error [${socket.id}]:`, err.message);
        });
    });
}

module.exports = { attachSocketEvents };
